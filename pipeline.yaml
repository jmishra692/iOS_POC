steps:
  - input: "Parameters"
    fields:
      - text: "APP_VERSION"
        hint: "Provide App Version if different from default"
        required: false
        key: app-version

      - text: "TARGET_BUILD_NUMBER"
        hint: "Set target build number"
        required: true
        default: 0
        key: target-build-number

      - text: "RELEASE_NOTE_URL"
        hint: "Provide release note URL"
        required: true
        key: release-note-url

      - select: "Options"
        multiple: true
        key: "parameter-options"
        options:
          - label: "deployToTestFlight"
            value: "option-deploy-to-test-flight"
          - label: "deployBeta"
            value: "options-deploy-beta"
          - label: "deployBetaServer"
            value: "options-deploy-beta-server"
          - label: "deployQA"
            value: "options-deploy-qa"
          - label: "autoDistributeTestFlight"
            value: "options-auto-distribute-test-flight"
steps:
  - label: "Run Build Script"
    command: 
      - export MYPAT=$(buildkite-agent secret get KEY_PAT)
      - echo $$MYPAT
      - git clone "https://jmishra.c:$$MYPAT@spruce.arlo.com/apps/ios.git"


  - label: "Set Environment Variables"
    command:
      - export SIMULATOR_BUILD="${SIMULATOR_BUILD:-false}"
      - export ENABLE_TA="${ENABLE_TA:-true}"
      - export BUILD_TIME_STAMP=$(date +%s)
      - export ARTIFACTORY_CREDS="jenkins-artifactory-creds"

  - label: "Pre-Build Step"
    command:
      - echo "Starting Pre-Build Step"
      - |
        if [ -z "$APP_VERSION" ]; then 
          echo "Default version ${DEFAULT_APP_VERSION} will be used"; 
        else 
          echo "Using provided version ${APP_VERSION}"; 
        fi

  - group: "Parallel Builds"
    steps:
      - label: "Unit Tests"
        command:
          - |
            if [ "$REQUIRED_UNIT_TEST" = true ]; then
              ./build-wrapper-macosx-x86/build-wrapper-macosx-x86 --out-dir bw_output ./build.sh UnitTest
            else
              echo "Skipping Unit Test"
            fi

      - label: "Development Build"
        command:
          - export ENVIRONMENT="Development"
          - export ARCHIVE_NAME="${BRANCH}-${ENVIRONMENT}"
#          - export RELEASE_VERSION="${APP_VERSION}"
          - "./build.sh ${ENVIRONMENT} ${RELEASE_VERSION} ${ARCHIVE_NAME} ${NEW_BUILD_NUMBER}"
          - cp build_app_template.plist "build/Release-iphoneos/${ARCHIVE_NAME}.plist"
          - |
            /usr/libexec/PlistBuddy -c "Set :items:0:assets:0:url https://arloios:<ARTIFACTORY_CREDS>@artifactory.arlocloud.com/artifactory/hmsios-local/${ARCHIVE_NAME}.ipa" "build/Release-iphoneos/${ARCHIVE_NAME}.plist"
